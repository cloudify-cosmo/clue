########
# Copyright (c) 2016 GigaSpaces Technologies Ltd. All rights reserved
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#        http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
############

name: cdev
blueprint_path: cloudify-dev/blueprint.yaml
user_config_path: { env: [CDEV_CONFIG_PATH, ~/.cdev] }

setup:
  args:
    - name: [-d, --repos-dir]
      help: where to clone stuff to
      required: true
  inputs:
    repos_dir: { arg: repos_dir }
    branches_dir: { concat: [{ loader: storage_dir }, '/branches'] }

hooks:
  after_setup: cdev.hooks:after_setup
  before_init: cdev.hooks:before_init

templates:
  - &sequential_tasks
    retries: 0
    retry_interval: 0
    thread_pool_size: 1

commands:
  install:
    workflow: install

  pip:
    install:
      workflow: execute_operation
      parameters:
        operation: pip.install
        run_by_dependency_order: true
        type_names: [python_package]
      event_cls: cdev.output:NamedNodeEvent

  git:
    status:
      task: *sequential_tasks
      workflow: execute_operation
      parameters:
        operation: git.status
        type_names: [git_repo]
      event_cls: cdev.output:NamedNodeEvent

    diff:
      args:
        - name: revision_range
          help: range to pass to git diff
      task: *sequential_tasks
      workflow: execute_operation
      parameters:
        operation: git.diff
        type_names: [git_repo]
        allow_kwargs_override: true
        operation_kwargs:
          revision_range: { arg: revision_range }
      event_cls: cdev.output:NamedNodeEvent

    pull:
      workflow: execute_operation
      parameters:
        operation: git.pull
        type_names: [git_repo]
      event_cls: cdev.output:NamedNodeEvent

    checkout:
      args:
        - name: branch
          help: branch name to checkout
          completer: cdev.completion:branches_completer
      workflow: execute_operation
      parameters:
        allow_kwargs_override: true
        operation: git.checkout
        operation_kwargs:
          branch: { arg: branch }
        type_names: [git_repo]
      event_cls: cdev.output:NamedNodeEvent

  nose:
    args:
      - name: package
        help: name of python package to run nosetests on
        completer: cdev.completion:package_completer
    task: *sequential_tasks
    workflow: execute_operation
    parameters:
      operation: nose.run
      node_ids: [{ arg: package }]
    event_cls: cdev.output:NoseEvent

ignored_modules:
  - cloudify_agent.operations
  - cloudify_agent.installer.operations

task:
  retries: 5
  retry_interval: 1
  thread_pool_size: 20
